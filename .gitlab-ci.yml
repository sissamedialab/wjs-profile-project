default:
  image: python:3.9
  # Runner must be inside Inasset's farm
  tags:
    - inasset

stages:
  - test
  - build
  - deploy


include:
  - project: 'wjs/wjs-profile-project'
    ref: master
    file: '.gitlab-ci-pkg-build-and-upload.yml'
  - project: 'wjs/wjs-profile-project'
    ref: master
    file: '.gitlab-ci-pkg-deploy.yml'
  - project: 'wjs/wjs-profile-project'
    ref: ${CI_COMMIT_REF_NAME}
    file: '.gitlab-ci-run-tests.yml'
  - project: 'wjs/wjs-profile-project'
    ref: ${CI_COMMIT_REF_NAME}
    file: '.gitlab-ci-pre-commit.yml'


# Run tests on the development "track" (Janeway 1.5 and its relative wjs)
# Prepare environment where to run the tests by:
# - use janeway:develop image
# - checkout wjs-develop branch (for wjs)
# - merge the new changes into wjs-develop
run-dev-tests:
  stage: test
  allow_failure: true
  # I would need some variable like CI_BRANCH_ANCESTOR != "master"
  only:
    variables:
    - ($CI_COMMIT_BRANCH != "wjs-production") && ($CI_COMMIT_BRANCH != "master")
  except:
    - tags
  # NB: the Janeway image used for the tests changes:
  image: registry.gitlab.sissamedialab.it/wjs/janeway/debian-python-git-janeway:develop
  #                                                                             ^^^^^^^

  cache:
    key: cache-default
    paths:
      - .cache

  variables:
    # DROP v !!!!!!!!!! Risky!!!!!
    CI_DEBUG_TRACE: "true"
    # DROP ^ !!!!!!!!!!
    # and then re-set settings -> ci/cd -> Public pipelines to true

    POSTGRES_USER: janeway
    POSTGRES_PASSWORD: janeway
    POSTGRES_DB: janeway
    # used by `pytest ...`:
    DJANGO_SETTINGS_MODULE: core.cicd_test_settings
    # used by `manage.py ...`:
    JANEWAY_SETTINGS_MODULE: core.cicd_settings
    # Use the following after force-pushes:
    GIT_STRATEGY: clone
    # see e.g.:
    # - https://docs.gitlab.com/ee/ci/runners/configure_runners.html#git-strategy
    # - https://stackoverflow.com/a/66519431/1581629
    #
    # Not setting `GIT_FETCH_EXTRA_FLAGS: --no-single-branch` because
    # of GIT_STRATEGY is set to `clone` (so I suppose that these flags
    # don't take effect)

  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/postgres:13.8
      alias: db

  script:
    - git status
    - git branch
    - git branch -a
    - git fetch --unshallow
    - git checkout wjs-develop
    - git merge --ff-only $CI_COMMIT_BRANCH
    - pip install --cache .cache --index-url=$PIP_INDEX_URL ./[test]
    - cp cicd_settings.py cicd_test_settings.py /janeway/src/core
    - cd /janeway/src
    - JANEWAY_SETTINGS_MODULE=${JANEWAY_SETTINGS_MODULE} python3 ./manage.py install_themes
    - pytest -c ${CI_PROJECT_DIR}/pytest.ini ${CI_PROJECT_DIR}/ -v -x


run-prod-tests:
  # Do not set the following: it would run important tests only for some branches!
  # I would need some variable like CI_BRANCH_ANCESTOR == "master"
  # only:
  #   variables:
  #   - ($CI_COMMIT_BRANCH == "wjs-production") || ($CI_COMMIT_BRANCH == "master")

  # Always run tests, except for tags, which have tests already run on
  # them when the commit is made.
  except:
    - tags
  extends:
    - .run-tests
  variables:
    IMAGE_TAG: registry.gitlab.sissamedialab.it/wjs/janeway/debian-python-git-janeway:production



pre-commit:
  # Always run linting, except for tags
  except:
    - tags

  extends:
    - .run-pre-commit


upload-package:
  only:
    - tags

  extends:
    - .upload-package


deploy-to-dev:
  only:
    - tags
  extends:
    - .deploy

  # Deploy basically means `pip install`, so the package must already
  # be in the package registry.
  needs:
    - upload-package

  variables:
    # TEST_SERVER_IP and TEST_SERVER_USER are defined in gitlab's group WJS
    SERVER_IP: "$TEST_SERVER_IP"
    SERVER_USER: "$TEST_SERVER_USER"
    # The deploy script will consider what's after the ":" as the tag name
    # but for security reasons only :word: chars are considered.
    # So beware when you create the tags.
    DEPLOY_CMD: "deploy-dev-wjs:$CI_COMMIT_TAG"

deploy-to-production:
  extends:
    - .deploy
  when: manual
  environment: production
  variables:
    SERVER_IP: "$PROD_SERVER_IP"
    SERVER_USER: "$PROD_SERVER_USER"
    DEPLOY_CMD: "deploy-prod-wjs"

deploy-to-pre-production:
  extends:
    - .deploy
  when: manual
  environment: pre-production
  variables:
    # There is a Janeway pre-production instance on the same
    # user@server as the test instance. The deploy script will do the
    # deploy based on the DEPLOY_CMD
    SERVER_IP: "TEST_SERVER_IP"
    SERVER_USER: "$TEST_SERVER_USER"
    DEPLOY_CMD: "deploy-pp-wjs"
